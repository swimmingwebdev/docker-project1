apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentication-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: authentication
  template:
    metadata:
      labels:
        app: authentication
    spec:
      containers:
        - name: authentication-service
          image: authentication_image:latest
          ports:
            - containerPort: 5000
          env:
            - name: FLASK_APP
              value: "app.py"
            - name: FLASK_ENV
              value: "development"
            - name: USER_ID
              valueFrom:
                secretKeyRef:
                  name: user-secret
                  key: USER_ID
            - name: USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-secret
                  key: USER_PASSWORD
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: JWT_SECRET_KEY
          volumeMounts:
            - mountPath: /app
              name: authentication-volume
      volumes:
        - name: authentication-volume
          hostPath:
            path: ./authentication
            type: Directory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enter-data-backend-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: enter-data-backend
  template:
    metadata:
      labels:
        app: enter-data-backend
    spec:
      containers:
        - name: enter-data-service
          image: enter_data_backend_image:latest
          ports:
            - containerPort: 5001
          env:
            - name: FLASK_APP
              value: "app.py"
            - name: FLASK_ENV
              value: "development"
            - name: MYSQL_HOST
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_HOST
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_DATABASE
          volumeMounts:
            - mountPath: /app
              name: enter-data-backend-volume
      volumes:
        - name: enter-data-backend-volume
          hostPath:
            path: ./enter_data/backend
            type: Directory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enter-data-frontend-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: enter-data-frontend
  template:
    metadata:
      labels:
        app: enter-data-frontend
    spec:
      containers:
        - name: enter-data-frontend
          image: nginx:alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: enter-data-frontend-volume
      volumes:
        - name: enter-data-frontend-volume
          hostPath:
            path: ./enter_data/frontend
            type: Directory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql-service
          image: swimminwebdev/expense-mysql-server:latest
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_DATABASE
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: analytics
  template:
    metadata:
      labels:
        app: analytics
    spec:
      containers:
        - name: analytics-service
          image: analytics_image:latest
          ports:
            - containerPort: 5003
          env:
            - name: FLASK_APP
              value: "app.py"
            - name: FLASK_ENV
              value: "development"
            - name: MYSQL_HOST
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_HOST
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_DATABASE
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_URI
          volumeMounts:
            - mountPath: /app
              name: analytics-volume
      volumes:
        - name: analytics-volume
          hostPath:
            path: ./analytics
            type: Directory
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb-service
          image: swimminwebdev/expense-mongo-server:latest
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_DATABASE
              value: analytics_db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: show-results-backend-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: show-results-backend
  template:
    metadata:
      labels:
        app: show-results-backend
    spec:
      containers:
        - name: show-results-service
          image: show_results_backend_image:latest
          ports:
            - containerPort: 5002
          env:
            - name: NODE_ENV
              value: "development"
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: mongo-secret
                  key: MONGO_URI
          volumeMounts:
            - mountPath: /app
              name: show-results-backend-volume
            - mountPath: /app/node_modules
              name: show-results-backend-node-modules
      volumes:
        - name: show-results-backend-volume
          hostPath:
            path: ./show_results/backend
            type: Directory
        - name: show-results-backend-node-modules
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: show-results-frontend-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: show-results-frontend
  template:
    metadata:
      labels:
        app: show-results-frontend
    spec:
      containers:
        - name: show-results-frontend
          image: nginx:alpine
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: show-results-frontend-volume
      volumes:
        - name: show-results-frontend-volume
          hostPath:
            path: ./show_results/frontend
            type: Directory
