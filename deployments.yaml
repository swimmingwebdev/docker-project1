apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentication
spec:
  replicas: 2 
  selector:
    matchLabels:
      app: authentication
  template:
    metadata:
      labels:
        app: authentication
    spec:
      containers:
      - name: authentication
        image: swimminwebdev/authentication-service:latest
        ports:
        - containerPort: 5000
        env:
        - name: FLASK_APP
          value: "app.py"
        - name: FLASK_ENV
          value: "production"
        - name: USER_ID
          valueFrom:
            secretKeyRef:
              name: expense-secrets
              key: USER_ID
        - name: USER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: expense-secrets
              key: USER_PASSWORD
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: expense-secrets
              key: JWT_SECRET_KEY
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enter-data-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: enter-data-backend
  template:
    metadata:
      labels:
        app: enter-data-backend
    spec:
      containers:
      - name: enter-data-backend
        image: swimminwebdev/enterdata-backend:latest
        ports:
        - containerPort: 5001
        env:
        - name: FLASK_APP
          value: "app.py"
        - name: FLASK_ENV
          value: "production"
        - name: MYSQL_HOST
          value: "mysql-service"
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: expense-secrets
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: expense-secrets
              key: MYSQL_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: expense-secrets
              key: MYSQL_DATABASE
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enter-data-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: enter-data-frontend
  template:
    metadata:
      labels:
        app: enter-data-frontend
    spec:
      containers:
      - name: enter-data-frontend
        image: swimminwebdev/enterdata-frontend:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: enter-data-frontend-files
          mountPath: /usr/share/nginx/html
        resources:
          requests:
            cpu: "50m"
            memory: "64Mi"
          limits:
            cpu: "100m"
            memory: "128Mi"
      volumes:
      - name: enter-data-frontend-files
        configMap:
          name: enter-data-frontend-files
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 1  
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: swimminwebdev/expense-mysql-server:latest
        ports:
        - containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: expense-secrets
              key: MYSQL_PASSWORD
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: expense-secrets
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: expense-secrets
              key: MYSQL_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: expense-secrets
              key: MYSQL_DATABASE
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics
spec:
  replicas: 2
  selector:
    matchLabels:
      app: analytics
  template:
    metadata:
      labels:
        app: analytics
    spec:
      containers:
      - name: analytics
        image: swimminwebdev/analytics-service:latest
        ports:
        - containerPort: 5003
        env:
        - name: FLASK_APP
          value: "app.py"
        - name: FLASK_ENV
          value: "production"
        - name: MYSQL_HOST
          value: "mysql-service"
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: expense-secrets
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: expense-secrets
              key: MYSQL_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: expense-secrets
              key: MYSQL_DATABASE
        - name: MONGO_URI
          valueFrom:
            secretKeyRef:
              name: expense-secrets
              key: MONGO_URI
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: swimminwebdev/expense-mongo-server:latest
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_DATABASE
          value: "analytics_db"
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        resources:
          requests:
            cpu: "500m"
            memory: "512Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: mongodb-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: show-results-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: show-results-backend
  template:
    metadata:
      labels:
        app: show-results-backend
    spec:
      containers:
      - name: show-results-backend
        image: swimminwebdev/showresults-backend:latest
        ports:
        - containerPort: 5002
        env:
        - name: NODE_ENV
          value: "production"
        - name: MONGO_URI
          valueFrom:
            secretKeyRef:
              name: expense-secrets
              key: MONGO_URI
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: show-results-frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: show-results-frontend
  template:
    metadata:
      labels:
        app: show-results-frontend
    spec:
      containers:
      - name: show-results-frontend
        image: swimminwebdev/showresults-frontend:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: show-results-frontend-files
          mountPath: /usr/share/nginx/html
        resources:
          requests:
            cpu: "50m"
            memory: "64Mi"
          limits:
            cpu: "100m"
            memory: "128Mi"
      volumes:
      - name: show-results-frontend-files
        configMap:
          name: show-results-frontend-files
